

# 1. Поработайте с переменными, создайте несколько, выведите на экран.
# Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.

x = input("Введите целое положительное число: ")
y = input("Введите строку: ")
z = input("Введите вещественное число: ")
print (int(x)*y)
print (z)


#2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
tm0 = 0 # обнуляю переменную для кол-ва секунд, вводимых пользователем
ch = 0 # обнуляю кол-во часов
min = 0 # минут
sec = 0 # секунд
while (tm0 <= 0) or (tm0 > 86400):
    tm0 = int(input("Введите время в секундах (от 1 до 86400): "))
    if (tm0 <= 0) or (tm0 > 86400):
        print("Вы неверно указали нужный диапазон времени в секундах!")
else:
    ch = tm0 // 3600  # вычисляю кол-во часов
    if ch < 1:
        ch = 0
    min = tm0 // 60 - ch * 60  # вычисляю кол-во часов
    if min < 1:
        min = 0
    ch = str(ch)  # кол-во часов перевожу в строковый тип
    min = str(min)  # кол-во минут перевожу в строковый тип
    sec = str(tm0 % 60)  # кол-во секунд перевожу в строковый тип
    tm1 = [ch, min, sec]  # создаю список из значений часов, минут и секунд
    for t in range(len(tm1)):
        if len(tm1[t]) != 2:  # если символ один, то добавляю в начало строки "0"
            tm1[t] = "0" + tm1[t]
        if t < len(tm1) - 1:  # вывожу на печать строку с временем в требуемом формате (с разделителем ":" между значениями)
            print("{}:".format(tm1[t]), end="")
        else:
            print(tm1[t])





#3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3.
# Считаем 3 + 33 + 333 = 369.


number = -1
sumnumb = 0
numbers = ["1","2","3","4","5","6","7","8","9"]
while (str(number) not in numbers):
    number = input("Введите любое положительное целое число от 1 до 9: ")
    if str(number) not in numbers:
        print("Введенное значение не является целым положительным числом от 1 до 9")
else:
    print("Считаем ", end="")
    numb = 0
    for i in range(3):

        numb = (i+1)*str(number)
        if i in range(2):
            print("{} + ".format(numb), end="")
        else:
            print("{}".format(numb), end="")
        sumnumb += int(numb)
    print(" = %d." % sumnumb)



#4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.

numbers = ["0","1","2","3","4","5","6","7","8","9"]
max = -1
while max <= 0:
    number = input("Введите целое положительное целое число: ")
    for i in range(len(number)):
        if (len(str(number)) > 1) and (str(number[i]) in numbers) :
            if int(number[i]) > max:
                max = int(number[i])
        else:
            print("Введенное значение не является целым положительным числом или состоит из одной цифры!")
            max = -1
            break
if max != -1:
    print ("Самая большая цифра в веденном числе - %d" % max)


#5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма.
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
# Выведите соответствующее сообщение.

numbers = ["0","1","2","3","4","5","6","7","8","9","."]
x = True
while x:
    vr = input("Введите величину выручки: ")
    rs = input("Введите величину расходов: ")
    y = True
    for i in range(len(str(vr)) - 1):
        if (vr[i] not in numbers): # or (str(vr[0])) == str(numbers[10]) or ((str(vr[0]) == str(numbers[0])) and ((str(vr[1]) == str(numbers[0])) or (index > 1):
            print("Введено неверное значение!")
            y = False
            break

    for i in range(len(str(rs)) - 1):
        if (rs[i] not in numbers): # or (str(rs[0])) == str(numbers[10]) or ((str(rs[0]) == str(numbers[0])) and ((str(rs[1]) == str(numbers[0])) or (index > 1):
            print("Введено неверное значение!")
            y = False
            break
            
    if (y != False) and (float(vr)>0) and (float(rs)>0):
        result = float(vr) - float(rs)
        if result > 0:
            print("Получена прибыль в размере ", result)
            break
        else:
            result = -1 * result
            print("Убыток составил ", result)
            break
    else:
        print("Введено неверное значение!")

else:
    print("Введенные значения должны быть положительными!")


#6. Если фирма отработала с прибылью, вычислите рентабельность выручки.
# Это отношение прибыли к выручке. Далее запросите численность сотрудников фирмы и
# определите прибыль фирмы в расчёте на одного сотрудника.

numbers = ["0","1","2","3","4","5","6","7","8","9","."]
x = True
while x:
    vr = input("Введите величину выручки: ")
    rs = input("Введите величину расходов: ")
    y = True
    for i in range(len(str(vr)) - 1):
        if (vr[i] not in numbers):
            print("Введено неверное значение!")
            y = False
            break
    for i in range(len(str(rs)) - 1):
        if (rs[i] not in numbers):
            print("Введено неверное значение!")
            y = False
            break

    if (y != False) and (float(vr)>0) and (float(rs)>0):
        result = float(vr) - float(rs)
        if result > 0:
            itog = float (result) / float(vr)
            str = input("Введите количество сотрудников: ")
            print("Прибыль фирмы в расчете на одного сотрудника составила {:.2f}".format(result/int(str)))
            break
        else:
            result = -1 * result
            print("Убыток составил %f" % result)
            break

else:
    print("Введенные значения должны быть положительными!")


# 7. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10% относительно предыдущего.
# Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на шестой день спортсмен достиг результата — не менее 3 км.

numbers = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "."]

while True:
    result1 = input("Введите результат спортсмена в первый день: ")
    resultgoal = input("Введите целевой результат спортсмена: ")
    x = True
    for i in range(len(str(result1))):
        if (str(result1[i]) not in numbers):
            print("Введено неверное значение!")
            x = False
            break

    for i in range(len(str(resultgoal))):
        if (str(resultgoal[i]) not in numbers):
            print("Введено неверное значение!")
            x = False
            break

    if x == False:
        break

    print("Результат: ")
    index = 1
    print(f"{index}-й день: ", end="")
    print("{:.2f}".format(float(result1)))
    rs = 0
    while rs < float(resultgoal):
        index += 1
        rs = float(result1) * 1.1 ** (index-1)
        print(f"{index}-й день: ", end="")
        print("{:.2f}".format(float(rs)))

    print(f"Ответ: на {index}-й день спортсмен достиг результата — не менее {int(rs//1)} км.")
    break


