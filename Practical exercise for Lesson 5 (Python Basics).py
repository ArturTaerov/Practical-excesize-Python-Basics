# 1. Создать программный файл в текстовом формате, записать в него построчно
# данные, вводимые пользователем. Об окончании ввода данных будет
# свидетельствовать пустая строка.
 
with open("test.txt", "w", encoding = "utf-8") as f_txt:    
    line = input("Введите строку или пустую строку для окончания: ")
    if len(line) != 0:
        f_txt.writelines(line + "\n")
    while (len(line) != 0):
        line = input("Введите строку или пустую строку для окончания: ")
        if len(line) != 0:
            f_txt.writelines(line + "\n")
        else:
            break

# 2. Создать текстовый файл (не программно), сохранить в нём несколько строк,
# выполнить подсчёт строк и слов в каждой строке.

with open("test.txt", "r", encoding = 'utf-8') as my_f:
    w_c = []
    for line in my_f:
        w_c.append(len(line.split()))
    print(f"В текстовом файле {my_f.name} строк {len(w_c)}, слов - {sum(w_c)}")
    
    
# 3. Создать текстовый файл (не программно).
# Построчно записать фамилии сотрудников и величину их окладов (не менее 10
# строк). Определить, кто из сотрудников имеет оклад менее 20 тысяч,
# вывести фамилии этих сотрудников.
# Выполнить подсчёт средней величины дохода сотрудников.

# Пример файла:

# Иванов 23543.12
# Петров 13749.32    

with open("text3.txt", "r", encoding = "utf-8") as my_f:
    ind = 0
    summa = 0
    for line in my_f:
        summa+= float(line.split()[1])
        ind += 1
        if float(line.split()[1]) < 20000:
            print(line.split()[0])
    print("Средняя величина дохода сотрудников составляет: ", summa/ind)




# 4. Создать (не программно) текстовый файл со следующим содержимым:

# One — 1
# Two — 2
# Three — 3
# Four — 4

#Напишите программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.

chis_e_r = {"One": "Один", "Two": "Два", "Three": "Три", "Four": "Четыре"}

with open("new_text4.txt", "w") as new_f:
    with open("text4.txt", "r", encoding = "utf-8") as my_f:
        for line in my_f:
            new_f.write(chis_e_r.setdefault(line.split()[0]) + " " +\
                        " ".join(line.split()[1:]) + "\n")




# 5. Создать (программно) текстовый файл, записать в него программно набор
# чисел, разделённых пробелами. Программа должна подсчитывать сумму чисел
# в файле и выводить её на экран.

sp = ["4", "68", "42", "87", "45", "9", "143", "98", "1"]
summa = 0
with open("test5.txt", "w+", encoding = "utf-8") as my_f:
    my_f.write(str(" ".join(sp)))
    my_f.seek(0)
    sp0 = my_f.read()
    for i in range(len(sp0.split())):
        summa += int(sp0.split()[i])
print(f"Сумма чисел в файле '{my_f.name}': {summa}")



# 6. Сформировать (не программно) текстовый файл. В нём каждая строка должна
# описывать учебный предмет и наличие лекционных, практических и лабораторных
# занятий по предмету. Сюда должно входить и количество занятий.
# Необязательно, чтобы для каждого предмета были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий
# по нему. Вывести его на экран.

# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

with open("test6.txt", "r", encoding = "utf-8") as my_f:
    k_nam = []
    summa = []
    for line in my_f:
        summ = 0
        k_nam.append(line.split()[0][:-1])
        for x in line.split()[1:]:
            if x != "-":
                summ += int(x[:x.index("(")])
        summa.append(summ)
    dct = {k_nam[y]:summa[y] for y in range(len(k_nam))}
    print(dct)




# 7. Создать вручную и заполнить несколькими строками текстовый файл,
# в котором каждая строка будет содержать данные о фирме: название,
# форма собственности, выручка, издержки.

# Пример строки файла: firm_1 ООО 10000 5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, 
# а также среднюю прибыль. Если фирма получила убытки, в расчёт средней прибыли
# её не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их
# прибылями, а также словарь со средней прибылью. Если фирма получила убытки,
# также добавить её в словарь (со значением убытков).

# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000},
# {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.

# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.



with open("test7.txt", "r", encoding = "utf-8") as my_f:
    sp = []
    dict_f = {line.split()[0]:int(line.split()[2])-int(line.split()[3]) for line in my_f}
    sp.append(dict_f)
    summa = 0
    ind = 0
    my_f.seek(0)
    for line in my_f:
        if int(line.split()[2])-int(line.split()[3]) >= 0:
            summa += int(line.split()[2])-int(line.split()[3])        
        else:
            ind +=1
    sr_prib = summa/(len(dict_f.values())-ind)
    sp.append({"average_profit":int(sr_prib)})

import json
with open("test7j.json", "w") as myj_f:
    json.dump(sp, myj_f)
    
